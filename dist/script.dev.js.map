{"version":3,"sources":["script.js"],"names":["fact","n","Number","factor","value","result","i","resFact","innerHTML","divByMod","X","devisibleMod","Y","deviderMod","resDivMode","computedDay","N","n_level","x","x_for_day","y","resDayCount","convertation","EUR_TO_DOL","EUR_TO_RUB","DOL_TO_EUR","DOL_TO_RUB","RUB_TO_DOL","RUB_TO_EUR","summ","currCount","fir_curr","String","selectFirCurrency","sec_curr","selectSecCurrency","curs","console","log","resCurr"],"mappings":";;AAAA;;AAEA;AACA,SAASA,IAAT,GAAgB;AACZ,MAAIC,CAAC,GAAGC,MAAM,CAACC,MAAM,CAACC,KAAR,CAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAGL,CAAb,EAAgBK,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,IAAAA,MAAM,GAAGA,MAAM,GAAGC,CAAlB;AACH;;AACDC,EAAAA,OAAO,CAACC,SAAR,GAAoBH,MAApB;AACH;AACD;;;AACA,SAASI,QAAT,GAAoB;AAChB,MAAIC,CAAC,GAAGR,MAAM,CAACS,YAAY,CAACP,KAAd,CAAd;AACA,MAAIQ,CAAC,GAAGV,MAAM,CAACW,UAAU,CAACT,KAAZ,CAAd;AACA,MAAIC,MAAJ;AAEAA,EAAAA,MAAM,GAAGK,CAAC,GAAGE,CAAb;AAEAE,EAAAA,UAAU,CAACN,SAAX,GAAuBH,MAAvB;AACH;AACD;;;AACA,SAASU,WAAT,GAAuB;AACnB,MAAIC,CAAC,GAAGd,MAAM,CAACe,OAAO,CAACb,KAAT,CAAd,CADmB,CACY;;AAC/B,MAAIc,CAAC,GAAGhB,MAAM,CAACiB,SAAS,CAACf,KAAX,CAAd,CAFmB,CAEc;;AACjC,MAAIgB,CAAC,GAAG,CAAR,CAHmB,CAGR;AAEX;;AACA,MAAIf,MAAJ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAEU,CAAnB,EAAsBV,CAAC,IAAEY,CAAzB,EAA4B;AACxB;AACAZ,IAAAA,CAAC,GAACc,CAAF;AACAf,IAAAA,MAAM,GAAEC,CAAR;AACH;;AACDe,EAAAA,WAAW,CAACb,SAAZ,GAAwBH,MAAxB;AACD;AAEH;;;AACA,SAASiB,YAAT,GAAwB;AACpB;AACA,MAAMC,UAAU,GAAG,GAAnB;AACA,MAAMC,UAAU,GAAG,KAAnB;AAEA,MAAMC,UAAU,GAAG,IAAnB;AACA,MAAMC,UAAU,GAAG,KAAnB;AAEA,MAAMC,UAAU,GAAG,GAAnB;AACA,MAAMC,UAAU,GAAG,GAAnB,CAToB,CAWpB;AAEA;;AACA,MAAIC,IAAI,GAAG3B,MAAM,CAAC4B,SAAS,CAAC1B,KAAX,CAAjB,CAdoB,CAgBpB;;AACA,MAAI2B,QAAQ,GAAGC,MAAM,CAACC,iBAAiB,CAAC7B,KAAnB,CAArB,CAjBoB,CAmBpB;;AACA,MAAI8B,QAAQ,GAAGC,iBAAiB,CAAC/B,KAAjC;AAEA,MAAIC,MAAJ;AAEA,MAAI+B,IAAI,GAAGL,QAAQ,GAAGG,QAAtB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,UAAQA,IAAR;AACI,SAAK,YAAL;AACI/B,MAAAA,MAAM,GAAIwB,IAAI,GAAGN,UAAjB;AACA;;AACJ,SAAK,WAAL;AACIlB,MAAAA,MAAM,GAAIwB,IAAI,GAAGL,UAAjB;AACA;;AACJ,SAAK,YAAL;AACInB,MAAAA,MAAM,GAAIwB,IAAI,GAAGJ,UAAjB;AACA;;AACJ,SAAK,aAAL;AACIpB,MAAAA,MAAM,GAAIwB,IAAI,GAAGH,UAAjB;AACA;;AACJ,SAAK,WAAL;AACIrB,MAAAA,MAAM,GAAIwB,IAAI,GAAGD,UAAjB;AACA;;AACJ,SAAK,aAAL;AACIvB,MAAAA,MAAM,GAAIwB,IAAI,GAAGF,UAAjB;AACA;;AACJ;AACItB,MAAAA,MAAM,GAAG,iBAAT;AApBR;;AAuBAkC,EAAAA,OAAO,CAAC/B,SAAR,GAAoBH,MAApB;AACH","sourcesContent":["/* ДОПИШИТЕ КОД ФУНКЦИЙ ЧТОБЫ ВСЕ РАБОТАЛО!*/\r\n\r\n/* Реализуйте функцию подсчета факториала числа n */\r\nfunction fact() {\r\n    let n = Number(factor.value);\r\n    let result = 1;\r\n    for (let i = n; i > 0; i--) {\r\n        result = result * i;\r\n    }\r\n    resFact.innerHTML = result;\r\n}\r\n/* Реализуйте функцию деления по модулю X на Y */\r\nfunction divByMod() {\r\n    let X = Number(devisibleMod.value);\r\n    let Y = Number(deviderMod.value);\r\n    let result;\r\n\r\n    result = X % Y;\r\n\r\n    resDivMode.innerHTML = result;\r\n}\r\n/* Реализуйте функцию подсчета дней */\r\nfunction computedDay() {\r\n    let N = Number(n_level.value); //Общая высота в метрах\r\n    let x = Number(x_for_day.value); //Метров в день\r\n    let y = 1; //-Метров в ночь(test)\r\n    \r\n    //let result = N / (x-1) +1 (^2);\r\n    let result ;\r\n    for (let i = 0; i<=N; i+=x) {\r\n        //i--;\r\n        i-y;\r\n        result =i;\r\n    }\r\n    resDayCount.innerHTML = result;\r\n  }\r\n\r\n/* Реализуйте функцию подсчета конвертированной суммы*/\r\nfunction convertation() {\r\n    // Используйте коэффициэнты\r\n    const EUR_TO_DOL = 0.9;\r\n    const EUR_TO_RUB = 0.007;\r\n\r\n    const DOL_TO_EUR = 1.05;\r\n    const DOL_TO_RUB = 0.008;\r\n\r\n    const RUB_TO_DOL = 116;\r\n    const RUB_TO_EUR = 126;\r\n\r\n    // В следующих переменных записываем что выбрал/ввел пользователь\r\n\r\n    // конвертируемая сумма\r\n    let summ = Number(currCount.value)\r\n\r\n    // из какой валюты\r\n    let fir_curr = String(selectFirCurrency.value);\r\n\r\n    // в какую валюту\r\n    let sec_curr = selectSecCurrency.value;\r\n\r\n    let result;\r\n\r\n    let curs = fir_curr + sec_curr;\r\n\r\n    console.log(curs);\r\n\r\n    switch (curs) {\r\n        case 'eurodollar':\r\n            result = (summ / EUR_TO_DOL);\r\n            break;\r\n        case 'euroruble':\r\n            result = (summ / EUR_TO_RUB);\r\n            break;\r\n        case 'dollareuro':\r\n            result = (summ / DOL_TO_EUR);\r\n            break;\r\n        case 'dollarruble':\r\n            result = (summ / DOL_TO_RUB);\r\n            break;\r\n        case 'rubleeuro':\r\n            result = (summ / RUB_TO_EUR);\r\n            break;\r\n        case 'rubledollar':\r\n            result = (summ / RUB_TO_DOL);\r\n            break;\r\n        default:\r\n            result = 'Incorrect input';\r\n    }\r\n\r\n    resCurr.innerHTML = result;\r\n}"],"file":"script.dev.js"}